#! /bin/bash -x
#
# Copyright (c) 2017 Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0
#
#
# Find if a TTY, USB connected device is connected to a hub and
# connected to a hub there is a device with a serial number of $1
#
# Return 0 if so, !0 otherwise
#
# This is used in udev to configure a serial-number-less USB serial
# dongle when we know is connected to the same hub as a thing with a
# serial number.
#
# Caveats:
#  - we can only do it with a single port, otherwise it gets confused
#  - we don't do it if the dongle has a serial number already
#


# On
# /sys/devices/pci0000:00/0000:00:14.0/usb1/1-2/1-2.1/1-2.1:1.0/ttyUSB0/tty/ttyUSB0/
# ../../../../ takes us to
# /sys/devices/pci0000:00/0000:00:14.0/usb1/1-2/1-2.1/, the USB device.

# Some kernel version changed this to
#
# /sys/devices/pci0000:00/0000:00:14.0/usb1/1-2/1-2.1/1-2.1:1.0/tty/ttyUSB0/
#
# from
#
# /sys/devices/pci0000:00/0000:00:14.0/usb1/1-2/1-2.1/1-2.1:1.0/ttyUSB0/tty/ttyUSB0/
#
# note the ttyUSB0/tty/ttyUSB0 vs tty/ttyUSB0
if echo $DEVPATH | grep -q "/tty[^/]*/tty/tty[^/]*"; then
    devpath=$(readlink -f /sys/$DEVPATH/../../../../..)
else
    devpath=$(readlink -f /sys/$DEVPATH/../../../..)
fi
if [ -f $devpath/serial ]; then		# Bail if it has a serial number
    exit 1
fi
for serialf in $devpath/*/serial; do	# Find a sibling with the # right serial
    if [ "$(<$serialf)" = "$1" ]; then
        exit 0
    fi
done
exit 1
